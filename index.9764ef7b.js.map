{"mappings":"ACEA,IAAM,EAAQ,SAAS,aAAa,CAAC,UAC/B,EAAkB,SAAS,aAAa,CAAC,eACzC,EAAkB,SAAS,aAAa,CAAC,eACzC,EAAqB,SAAS,aAAa,CAAC,kBAC5C,EAAqB,SAAS,aAAa,CAAC,kBAOlD,SAAS,IACP,IAAM,EAAW,EAAM,IAAI,CAAC,MAAM,CAC5B,EAAc,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,AAE9C,CAAA,EAAgB,QAAQ,CAAG,GATb,GAUd,EAAgB,QAAQ,CAAG,GATb,EAUd,EAAmB,QAAQ,CAAG,GATb,GAUjB,EAAmB,QAAQ,CAAG,GATb,CAUnB,CAEA,EAAgB,gBAAgB,CAAC,QAAS,WAIxC,IAAK,IAHC,EAAS,EAAM,SAAS,GACxB,EAAc,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAErC,EAAI,EAAG,EAAI,EAAa,IAC/B,EAAO,UAAU,GAEnB,GACF,GAEA,EAAgB,gBAAgB,CAAC,QAAS,WACpC,EAAM,IAAI,CAAC,MAAM,CAzBP,GA0BZ,EAAM,SAAS,CAAC,IAElB,GACF,GAEA,EAAmB,gBAAgB,CAAC,QAAS,WAG3C,IAAK,IAFC,EAAW,EAAM,IAAI,CAAC,MAAM,CAEzB,EAAI,EAAG,EAAI,EAAU,IAC5B,EAAM,IAAI,CAAC,EAAE,CAAC,UAAU,GAE1B,GACF,GAEA,EAAmB,gBAAgB,CAAC,QAAS,WAC3C,GAAI,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAvCb,EA0Cf,IAAK,IAFC,EAAW,EAAM,IAAI,CAAC,MAAM,CAEzB,EAAI,EAAG,EAAI,EAAU,IAC5B,EAAM,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,IAG7B,GACF,GACA","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar table = document.querySelector(\".field\");\nvar appendRowButton = document.querySelector(\".append-row\");\nvar removeRowButton = document.querySelector(\".remove-row\");\nvar appendColumnButton = document.querySelector(\".append-column\");\nvar removeColumnButton = document.querySelector(\".remove-column\");\nvar maxRows = 10;\nvar minRows = 2;\nvar maxColumns = 10;\nvar minColumns = 2;\nfunction updateButtonState() {\n    var rowCount = table.rows.length;\n    var columnCount = table.rows[0].cells.length;\n    appendRowButton.disabled = rowCount >= maxRows;\n    removeRowButton.disabled = rowCount <= minRows;\n    appendColumnButton.disabled = columnCount >= maxColumns;\n    removeColumnButton.disabled = columnCount <= minColumns;\n}\nappendRowButton.addEventListener(\"click\", function() {\n    var newRow = table.insertRow();\n    var columnCount = table.rows[0].cells.length;\n    for(var i = 0; i < columnCount; i++)newRow.insertCell();\n    updateButtonState();\n});\nremoveRowButton.addEventListener(\"click\", function() {\n    if (table.rows.length > minRows) table.deleteRow(-1);\n    updateButtonState();\n});\nappendColumnButton.addEventListener(\"click\", function() {\n    var rowCount = table.rows.length;\n    for(var i = 0; i < rowCount; i++)table.rows[i].insertCell();\n    updateButtonState();\n});\nremoveColumnButton.addEventListener(\"click\", function() {\n    if (table.rows[0].cells.length > minColumns) {\n        var rowCount = table.rows.length;\n        for(var i = 0; i < rowCount; i++)table.rows[i].deleteCell(-1);\n    }\n    updateButtonState();\n});\nupdateButtonState();\n\n//# sourceMappingURL=index.9764ef7b.js.map\n","'use strict';\n\nconst table = document.querySelector('.field');\nconst appendRowButton = document.querySelector('.append-row');\nconst removeRowButton = document.querySelector('.remove-row');\nconst appendColumnButton = document.querySelector('.append-column');\nconst removeColumnButton = document.querySelector('.remove-column');\n\nconst maxRows = 10;\nconst minRows = 2;\nconst maxColumns = 10;\nconst minColumns = 2;\n\nfunction updateButtonState() {\n  const rowCount = table.rows.length;\n  const columnCount = table.rows[0].cells.length;\n\n  appendRowButton.disabled = rowCount >= maxRows;\n  removeRowButton.disabled = rowCount <= minRows;\n  appendColumnButton.disabled = columnCount >= maxColumns;\n  removeColumnButton.disabled = columnCount <= minColumns;\n}\n\nappendRowButton.addEventListener('click', () => {\n  const newRow = table.insertRow();\n  const columnCount = table.rows[0].cells.length;\n\n  for (let i = 0; i < columnCount; i++) {\n    newRow.insertCell();\n  }\n  updateButtonState();\n});\n\nremoveRowButton.addEventListener('click', () => {\n  if (table.rows.length > minRows) {\n    table.deleteRow(-1);\n  }\n  updateButtonState();\n});\n\nappendColumnButton.addEventListener('click', () => {\n  const rowCount = table.rows.length;\n\n  for (let i = 0; i < rowCount; i++) {\n    table.rows[i].insertCell();\n  }\n  updateButtonState();\n});\n\nremoveColumnButton.addEventListener('click', () => {\n  if (table.rows[0].cells.length > minColumns) {\n    const rowCount = table.rows.length;\n\n    for (let i = 0; i < rowCount; i++) {\n      table.rows[i].deleteCell(-1);\n    }\n  }\n  updateButtonState();\n});\nupdateButtonState();\n"],"names":["table","document","querySelector","appendRowButton","removeRowButton","appendColumnButton","removeColumnButton","updateButtonState","rowCount","rows","length","columnCount","cells","disabled","addEventListener","newRow","insertRow","i","insertCell","deleteRow","deleteCell"],"version":3,"file":"index.9764ef7b.js.map"}